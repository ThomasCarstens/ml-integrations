"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate-tts";
exports.ids = ["pages/api/generate-tts"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-tts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-tts.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-tts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-tts.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/generate-tts.js */ \"(api-node)/./pages/api/generate-tts.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/generate-tts\",\n        pathname: \"/api/generate-tts\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_generate_tts_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/generate-tts\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/generate-tts\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-tts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-tts.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/generate-tts.js":
/*!***********************************!*\
  !*** ./pages/api/generate-tts.js ***!
  \***********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _gradio_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @gradio/client */ \"@gradio/client\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cors */ \"cors\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_gradio_client__WEBPACK_IMPORTED_MODULE_0__]);\n_gradio_client__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Initialize CORS middleware\nconst corsMiddleware = cors__WEBPACK_IMPORTED_MODULE_1__({\n    origin: '*',\n    methods: [\n        'GET',\n        'POST',\n        'OPTIONS'\n    ],\n    allowedHeaders: [\n        'Content-Type',\n        'Authorization'\n    ]\n});\n// Helper function to run middleware\nfunction runMiddleware(req, res, fn) {\n    return new Promise((resolve, reject)=>{\n        fn(req, res, (result)=>{\n            if (result instanceof Error) {\n                return reject(result);\n            }\n            return resolve(result);\n        });\n    });\n}\nasync function handler(req, res) {\n    // Run CORS middleware\n    await runMiddleware(req, res, corsMiddleware);\n    // Handle preflight requests\n    if (req.method === 'OPTIONS') {\n        res.status(200).end();\n        return;\n    }\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    try {\n        const { text_input, exaggeration_input = 0.5, temperature_input = 0.8, seed_num_input = 0, cfgw_input = 0.5 } = req.body;\n        if (!text_input || text_input.trim().length === 0) {\n            return res.status(400).json({\n                error: 'Text input is required'\n            });\n        }\n        if (text_input.trim().length > 300) {\n            return res.status(400).json({\n                error: 'Text must be 300 characters or less'\n            });\n        }\n        console.log('Generating TTS for:', text_input.trim());\n        // Get example audio file for reference\n        const response_0 = await fetch(\"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav\");\n        const exampleAudio = await response_0.blob();\n        // Connect to the Chatterbox client\n        const client = await _gradio_client__WEBPACK_IMPORTED_MODULE_0__.Client.connect(\"ResembleAI/Chatterbox\");\n        // Generate TTS audio\n        const result = await client.predict(\"/generate_tts_audio\", {\n            text_input: text_input.trim(),\n            audio_prompt_path_input: exampleAudio,\n            exaggeration_input: exaggeration_input,\n            temperature_input: temperature_input,\n            seed_num_input: seed_num_input,\n            cfgw_input: cfgw_input\n        });\n        console.log('TTS Result:', result.data);\n        // The result should contain audio data\n        if (!result.data || !result.data[0]) {\n            throw new Error('No audio data received from API');\n        }\n        // Return the audio data URL and metadata\n        const audioData = result.data[0];\n        res.status(200).json({\n            success: true,\n            audioUrl: audioData.url || audioData,\n            metadata: {\n                text: text_input.trim(),\n                exaggeration: exaggeration_input,\n                temperature: temperature_input,\n                seed: seed_num_input,\n                cfgw: cfgw_input,\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('TTS Error:', error);\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n        res.status(500).json({\n            error: 'Failed to generate speech',\n            details: errorMessage\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU9DLFdBQVc7WUFDbkM7UUFDRjtJQUVGLEVBQUUsT0FBT2hDLE9BQU87UUFDZFMsUUFBUVQsS0FBSyxDQUFDLGNBQWNBO1FBQzVCLE1BQU1pQyxlQUFlakMsaUJBQWlCTixRQUFRTSxNQUFNa0MsT0FBTyxHQUFHO1FBQzlEOUMsSUFBSVMsTUFBTSxDQUFDLEtBQUtFLElBQUksQ0FBQztZQUNuQkMsT0FBTztZQUNQbUMsU0FBU0Y7UUFDWDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL3RoZXJtaXN0b3IvRG9jdW1lbnRzL2h1bWFuLXNpZ25hbC9jaGF0dGVyYm94LXNlcnZlci9wYWdlcy9hcGkvZ2VuZXJhdGUtdHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudCB9IGZyb20gXCJAZ3JhZGlvL2NsaWVudFwiO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5cbi8vIEluaXRpYWxpemUgQ09SUyBtaWRkbGV3YXJlXG5jb25zdCBjb3JzTWlkZGxld2FyZSA9IGNvcnMoe1xuICBvcmlnaW46ICcqJyxcbiAgbWV0aG9kczogWydHRVQnLCAnUE9TVCcsICdPUFRJT05TJ10sXG4gIGFsbG93ZWRIZWFkZXJzOiBbJ0NvbnRlbnQtVHlwZScsICdBdXRob3JpemF0aW9uJ10sXG59KTtcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIHJ1biBtaWRkbGV3YXJlXG5mdW5jdGlvbiBydW5NaWRkbGV3YXJlKHJlcSwgcmVzLCBmbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZuKHJlcSwgcmVzLCAocmVzdWx0KSA9PiB7XG4gICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHJlamVjdChyZXN1bHQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc29sdmUocmVzdWx0KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgLy8gUnVuIENPUlMgbWlkZGxld2FyZVxuICBhd2FpdCBydW5NaWRkbGV3YXJlKHJlcSwgcmVzLCBjb3JzTWlkZGxld2FyZSk7XG5cbiAgLy8gSGFuZGxlIHByZWZsaWdodCByZXF1ZXN0c1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgcmVzLnN0YXR1cygyMDApLmVuZCgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRleHRfaW5wdXQsXG4gICAgICBleGFnZ2VyYXRpb25faW5wdXQgPSAwLjUsXG4gICAgICB0ZW1wZXJhdHVyZV9pbnB1dCA9IDAuOCxcbiAgICAgIHNlZWRfbnVtX2lucHV0ID0gMCxcbiAgICAgIGNmZ3dfaW5wdXQgPSAwLjVcbiAgICB9ID0gcmVxLmJvZHk7XG5cbiAgICBpZiAoIXRleHRfaW5wdXQgfHwgdGV4dF9pbnB1dC50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1RleHQgaW5wdXQgaXMgcmVxdWlyZWQnIH0pO1xuICAgIH1cblxuICAgIGlmICh0ZXh0X2lucHV0LnRyaW0oKS5sZW5ndGggPiAzMDApIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnVGV4dCBtdXN0IGJlIDMwMCBjaGFyYWN0ZXJzIG9yIGxlc3MnIH0pO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0aW5nIFRUUyBmb3I6JywgdGV4dF9pbnB1dC50cmltKCkpO1xuXG4gICAgLy8gR2V0IGV4YW1wbGUgYXVkaW8gZmlsZSBmb3IgcmVmZXJlbmNlXG4gICAgY29uc3QgcmVzcG9uc2VfMCA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9naXRodWIuY29tL2dyYWRpby1hcHAvZ3JhZGlvL3Jhdy9tYWluL3Rlc3QvdGVzdF9maWxlcy9hdWRpb19zYW1wbGUud2F2XCIpO1xuICAgIGNvbnN0IGV4YW1wbGVBdWRpbyA9IGF3YWl0IHJlc3BvbnNlXzAuYmxvYigpO1xuXG4gICAgLy8gQ29ubmVjdCB0byB0aGUgQ2hhdHRlcmJveCBjbGllbnRcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBDbGllbnQuY29ubmVjdChcIlJlc2VtYmxlQUkvQ2hhdHRlcmJveFwiKTtcbiAgICBcbiAgICAvLyBHZW5lcmF0ZSBUVFMgYXVkaW9cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbGllbnQucHJlZGljdChcIi9nZW5lcmF0ZV90dHNfYXVkaW9cIiwgeyBcdFx0XG4gICAgICB0ZXh0X2lucHV0OiB0ZXh0X2lucHV0LnRyaW0oKSwgXG4gICAgICBhdWRpb19wcm9tcHRfcGF0aF9pbnB1dDogZXhhbXBsZUF1ZGlvLCBcdFx0XG4gICAgICBleGFnZ2VyYXRpb25faW5wdXQ6IGV4YWdnZXJhdGlvbl9pbnB1dCwgXHRcdFxuICAgICAgdGVtcGVyYXR1cmVfaW5wdXQ6IHRlbXBlcmF0dXJlX2lucHV0LCBcdFx0XG4gICAgICBzZWVkX251bV9pbnB1dDogc2VlZF9udW1faW5wdXQsIFx0XHRcbiAgICAgIGNmZ3dfaW5wdXQ6IGNmZ3dfaW5wdXQsIFxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coJ1RUUyBSZXN1bHQ6JywgcmVzdWx0LmRhdGEpO1xuXG4gICAgLy8gVGhlIHJlc3VsdCBzaG91bGQgY29udGFpbiBhdWRpbyBkYXRhXG4gICAgaWYgKCFyZXN1bHQuZGF0YSB8fCAhcmVzdWx0LmRhdGFbMF0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXVkaW8gZGF0YSByZWNlaXZlZCBmcm9tIEFQSScpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgYXVkaW8gZGF0YSBVUkwgYW5kIG1ldGFkYXRhXG4gICAgY29uc3QgYXVkaW9EYXRhID0gcmVzdWx0LmRhdGFbMF07XG4gICAgXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGF1ZGlvVXJsOiBhdWRpb0RhdGEudXJsIHx8IGF1ZGlvRGF0YSxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIHRleHQ6IHRleHRfaW5wdXQudHJpbSgpLFxuICAgICAgICBleGFnZ2VyYXRpb246IGV4YWdnZXJhdGlvbl9pbnB1dCxcbiAgICAgICAgdGVtcGVyYXR1cmU6IHRlbXBlcmF0dXJlX2lucHV0LFxuICAgICAgICBzZWVkOiBzZWVkX251bV9pbnB1dCxcbiAgICAgICAgY2ZndzogY2Znd19pbnB1dCxcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH1cbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1RUUyBFcnJvcjonLCBlcnJvcik7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvciBvY2N1cnJlZCc7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGdlbmVyYXRlIHNwZWVjaCcsIFxuICAgICAgZGV0YWlsczogZXJyb3JNZXNzYWdlIFxuICAgIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiQ2xpZW50IiwiY29ycyIsImNvcnNNaWRkbGV3YXJlIiwib3JpZ2luIiwibWV0aG9kcyIsImFsbG93ZWRIZWFkZXJzIiwicnVuTWlkZGxld2FyZSIsInJlcSIsInJlcyIsImZuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXN1bHQiLCJFcnJvciIsImhhbmRsZXIiLCJtZXRob2QiLCJzdGF0dXMiLCJlbmQiLCJqc29uIiwiZXJyb3IiLCJ0ZXh0X2lucHV0IiwiZXhhZ2dlcmF0aW9uX2lucHV0IiwidGVtcGVyYXR1cmVfaW5wdXQiLCJzZWVkX251bV9pbnB1dCIsImNmZ3dfaW5wdXQiLCJib2R5IiwidHJpbSIsImxlbmd0aCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZV8wIiwiZmV0Y2giLCJleGFtcGxlQXVkaW8iLCJibG9iIiwiY2xpZW50IiwiY29ubmVjdCIsInByZWRpY3QiLCJhdWRpb19wcm9tcHRfcGF0aF9pbnB1dCIsImRhdGEiLCJhdWRpb0RhdGEiLCJzdWNjZXNzIiwiYXVkaW9VcmwiLCJ1cmwiLCJtZXRhZGF0YSIsInRleHQiLCJleGFnZ2VyYXRpb24iLCJ0ZW1wZXJhdHVyZSIsInNlZWQiLCJjZmd3IiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZXJyb3JNZXNzYWdlIiwibWVzc2FnZSIsImRldGFpbHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/generate-tts.js\n");

/***/ }),

/***/ "@gradio/client":
/*!*********************************!*\
  !*** external "@gradio/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("@gradio/client");;

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("cors");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-tts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-tts.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();